{"version":3,"sources":["../../src/models/auction.model.js"],"names":["Schema","AuctionSchema","title","type","String","required","description","startPrice","Number","highestPrice","endDate","Date","relatedUser","Types","ObjectId","ref","relatedCategory","imgs","auctionOffer","favUsers","offerUsers","finished","Boolean","default","creationDate","now","index","set","transform","doc","ret","options","id","_id","__v","model"],"mappings":";;;;;;AACA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,gBAAgB,IAAID,MAAJ,CAAW;;AAE7BE,WAAQ;AACJC,cAAMC,MADF;AAEJC,kBAAU;AAFN,KAFqB;AAM7BC,iBAAa;AACTH,cAAKC,MADI;AAETC,kBAAU;AAFD,KANgB;AAU7BE,gBAAW;AACRJ,cAAMK,MADE;AAERH,kBAAS;AAFD,KAVkB;AAc7BI,kBAAa;AACVN,cAAMK;AADI,KAdgB;AAiB7BE,aAAQ;AACJP,cAAMQ,IADF;AAEJN,kBAAS;AAFL,KAjBqB;AAqB7BO,iBAAY;AACRT,cAAMH,OAAOa,KAAP,CAAaC,QADX;AAERC,aAAI,MAFI;AAGRV,kBAAS;AAHD,KArBiB;AA0B7BW,qBAAgB;AACZb,cAAMH,OAAOa,KAAP,CAAaC,QADP;AAEZC,aAAI,UAFQ;AAGZV,kBAAS;AAHG,KA1Ba;AA+B7BY,UAAK;AACDd,cAAK,CAACC,MAAD;AADJ,KA/BwB;AAkC7Bc,kBAAa;AACTf,cAAMH,OAAOa,KAAP,CAAaC,QADV;AAETC,aAAI;AAFK,KAlCgB;AAsC7BI,cAAU;AACNhB,cAAM,CAACH,OAAOa,KAAP,CAAaC,QAAd,CADA;AAENC,aAAK;AAFC,KAtCmB;AA0C7BK,gBAAY;AACRjB,cAAM,CAACH,OAAOa,KAAP,CAAaC,QAAd,CADE;AAERC,aAAK;AAFG,KA1CiB;AA8C7BM,cAAS;AACLlB,cAAMmB,OADD;AAELC,iBAAS;AAFJ,KA9CoB;AAkD7BC,kBAAc;AACVrB,cAAMQ,IADI;AAEVY,iBAASZ,KAAKc;AAFJ;;AAlDe,CAAX,CAAtB;;AAyDAxB,cAAcyB,KAAd,CAAoB,EAAExB,OAAO,MAAT,EAAiBI,aAAa,MAA9B,EAApB;;AAEAL,cAAc0B,GAAd,CAAkB,QAAlB,EAA4B;AACxBC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACpCD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACA,eAAOJ,IAAIX,QAAX;AACA,eAAOW,IAAIV,UAAX;AACH;AAPuB,CAA5B;;kBAUe,mBAASe,KAAT,CAAe,SAAf,EAAyBlC,aAAzB,C","file":"auction.model.js","sourcesContent":["\nimport mongoose from \"mongoose\" ;\nconst Schema = mongoose.Schema ;\n\nconst AuctionSchema = new Schema({\n   \n    title : {\n        type: String,\n        required: true\n    },\n    description: {\n        type:String,\n        required: true\n    },\n    startPrice:{\n       type: Number,\n       required:true\n    },\n    highestPrice:{\n       type: Number\n    },\n    endDate:{\n        type: Date,\n        required:true\n    },\n    relatedUser:{\n        type: Schema.Types.ObjectId,\n        ref:'user',\n        required:true\n    },\n    relatedCategory:{\n        type: Schema.Types.ObjectId,\n        ref:'category',\n        required:true\n    },\n    imgs:{\n        type:[String]\n    },\n    auctionOffer:{\n        type: Schema.Types.ObjectId,\n        ref:'auction-offer'\n    },\n    favUsers: { \n        type: [Schema.Types.ObjectId], \n        ref: 'user'\n    },\n    offerUsers: {\n        type: [Schema.Types.ObjectId],\n        ref: 'user'\n    },\n    finished:{\n        type: Boolean,\n        default: false\n    },\n    creationDate: {\n        type: Date,\n        default: Date.now\n    }\n\n});\n\nAuctionSchema.index({ title: 'text', description: 'text'});\n\nAuctionSchema.set('toJSON', {\n    transform: function (doc, ret, options) {\n        ret.id = ret._id;\n        delete ret._id;\n        delete ret.__v;\n        delete ret.favUsers;\n        delete ret.offerUsers;\n    }\n}); \n\nexport default mongoose.model(\"auction\",AuctionSchema);"]}