{"version":3,"sources":["../../src/models/barter.model.js"],"names":["Schema","BarterSchema","title","type","String","required","trim","description","neededProduct","relatedUser","Types","ObjectId","ref","relatedCategory","enum","default","imgs","finished","Boolean","barterOffer","favUsers","offerUsers","creationDate","Date","now","index","set","transform","doc","ret","options","id","_id","__v","Barter","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,eAAe,IAAID,MAAJ,CAAW;AAC5BE,WAAO;AACHC,cAAMC,MADH;AAEHC,kBAAU,CAAC,IAAD,EAAO,6BAAP,CAFP;AAGHC,cAAM;AAHH,KADqB;AAM5BC,iBAAa;AACTJ,cAAMC,MADG;AAETC,kBAAU,CAAC,IAAD,EAAO,mCAAP;AAFD,KANe;AAU5BG,mBAAe;AACXL,cAAMC,MADK;AAEXC,kBAAU,CAAC,IAAD,EAAO,qCAAP;AAFC,KAVa;AAc5BI,iBAAa;AACTN,cAAMH,OAAOU,KAAP,CAAaC,QADV;AAETC,aAAK,MAFI;AAGTP,kBAAU,CAAC,IAAD,EAAO,wBAAP;AAHD,KAde;AAmB5BQ,qBAAiB;AACbV,cAAMH,OAAOU,KAAP,CAAaC,QADN;AAEbC,aAAK,UAFQ;AAGbP,kBAAU,CAAC,IAAD,EAAO,4BAAP;AAHG,KAnBW;AAwB5BF,UAAM;AACFA,cAAMC,MADJ;AAEFU,cAAO,CAAC,MAAD,EAAQ,MAAR,CAFL;AAGFC,iBAAS;AAHP,KAxBsB;AA6B5BC,UAAM;AACFb,cAAM,CAACC,MAAD;AADJ,KA7BsB;AAgC5Ba,cAAU;AACNd,cAAMe,OADA;AAENH,iBAAS;AAFH,KAhCkB;AAoC5BI,iBAAa;AACThB,cAAMH,OAAOU,KAAP,CAAaC,QADV;AAETC,aAAK;AAFI,KApCe;AAwC5BQ,cAAU;AACNjB,cAAM,CAACH,OAAOU,KAAP,CAAaC,QAAd,CADA;AAENC,aAAK;AAFC,KAxCkB;AA4C5BS,gBAAY;AACRlB,cAAM,CAACH,OAAOU,KAAP,CAAaC,QAAd,CADE;AAERC,aAAK;AAFG,KA5CgB;AAgD5BU,kBAAc;AACVnB,cAAMoB,IADI;AAEVR,iBAASQ,KAAKC;AAFJ;AAhDc,CAAX,CAArB;AAqDAvB,aAAawB,KAAb,CAAmB,EAAEvB,OAAO,MAAT,EAAiBK,aAAa,MAA9B,EAAnB;;AAEAN,aAAayB,GAAb,CAAiB,QAAjB,EAA2B;AACvBC,eAAW,mBAAUC,GAAV,EAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACpCD,YAAIE,EAAJ,GAASF,IAAIG,GAAb;AACA,eAAOH,IAAIG,GAAX;AACA,eAAOH,IAAII,GAAX;AACA,eAAOJ,IAAIT,QAAX;AACA,eAAOS,IAAIR,UAAX;AACH;AAPsB,CAA3B;;AAUA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMa,SAAS,mBAASC,KAAT,CAAe,QAAf,EAAyBlC,YAAzB,CAAf;;kBAEeiC,M","file":"barter.model.js","sourcesContent":["import mongoose from \"mongoose\";\nimport UserSchema from \"./user.model\"\nconst Schema = mongoose.Schema;\n\nconst BarterSchema = new Schema({\n    title: {\n        type: String,\n        required: [true, 'title of barter is required'],\n        trim: true\n    },\n    description: {\n        type: String,\n        required: [true, 'description of barter is required']\n    },\n    neededProduct: {\n        type: String,\n        required: [true, 'neededProduct of barter is required']\n    },\n    relatedUser: {\n        type: Schema.Types.ObjectId, \n        ref: 'user',\n        required: [true, 'Id of user is required']\n    },\n    relatedCategory: {\n        type: Schema.Types.ObjectId, \n        ref: 'category',\n        required: [true, 'Id of category is required']\n    },\n    type: {\n        type: String,\n        enum : ['TEMP','PERM'],\n        default: 'TEMP'\n    },\n    imgs: {\n        type: [String]\n    },\n    finished: {\n        type: Boolean,\n        default: false\n    },\n    barterOffer: {\n        type: Schema.Types.ObjectId, \n        ref: 'barterOffer'\n    },\n    favUsers: { \n        type: [Schema.Types.ObjectId], \n        ref: 'user'\n    },\n    offerUsers: {\n        type: [Schema.Types.ObjectId],\n        ref: 'user'\n    },\n    creationDate: {\n        type: Date,\n        default: Date.now\n    }\n});\nBarterSchema.index({ title: 'text', description: 'text'});\n\nBarterSchema.set('toJSON', {\n    transform: function (doc, ret, options) {\n        ret.id = ret._id;\n        delete ret._id;\n        delete ret.__v;\n        delete ret.favUsers;\n        delete ret.offerUsers\n    }\n});\n\n// BarterSchema.pre(\"init\", function (next, req, callback) {\n//     const barter = this;    \n//     if(barter.offerUsers.indexOf(req.user.id) > -1)\n//     barter.inMyOffers = true;\n//     else this.barter.inMyOffers = false;\n// });\n\n\n// BarterSchema.virtual('inMyOffers').get(function () {\n//     console.log(\"offerUsers: \" , this.offerUsers)\n//     console.log(\"USER: \" , req.user.id)    \n//   return this.offerUsers.indexOf(req.user.id) > -1;\n// })\n\n// BarterSchema.pre('find', function (next) {\n//     // let barter = this;    \n//     // console.log(\"UserID: \", this.options.userId);\n//     // if(.offerUsers.indexOf(this.options.userId) > -1)\n//     //     barter.inMyOffers = true;\n//     // else barter.inMyOffers = false;\n//     // next();\n// });\n\n// .set(function (setFullNameTo) {\n//   var split = setFullNameTo.split(' ')\n//     , firstName = split[0]\n//     , lastName = split[1];\n\n//   this.set('name.first', firstName);\n//   this.set('name.last', lastName);\n// });\nconst Barter = mongoose.model('barter', BarterSchema);\n\nexport default Barter;\n\n"]}