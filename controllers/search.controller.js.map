{"version":3,"sources":["../../src/controllers/search.controller.js"],"names":["search","req","res","next","query","q","page","limit","send","barters","auctions","matchQueryRegx","RegExp","title","description","parseInt","count","barterCount","auctionCount","halfLimit","Math","ceil","pageCount","min","find","populate","sort","creationDate","skip","response","undefined","length","status"],"mappings":"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","file":"search.controller.js","sourcesContent":["import mongoose from \"mongoose\";\nimport Barter from \"../models/barter.model\";\nimport Auction from \"../models/auction.model\";\nimport { ApiResponse2 } from \"../helpers/ApiResponse\"\nimport { checkAllMyOfferAndFavouriteIn } from \"../helpers/Barter&AuctionHelper\";\nimport { escapeRegExp } from 'lodash';\n\nexport default {\n    async search(req, res, next) {\n        let { q, page, limit } = req.query;\n        if (!q)\n            res.send({ barters: [], auctions: [] });\n        \n        const matchQueryRegx = new RegExp(escapeRegExp(q), 'i') // 'i' to convert upper case to lower.\n        let query = { '$or': [{ title: matchQueryRegx }, { description: matchQueryRegx }] };\n\n        page = page ? parseInt(page) : 1;\n        limit = limit ? parseInt(limit) : 10;\n\n        try {\n\n            let barterCount = await Barter.count(query);\n            let auctionCount = await Auction.count(query);\n\n            let halfLimit = limit ? Math.ceil(limit / 2) : 5;\n            let pageCount = Math.ceil(barterCount + auctionCount / limit);\n\n\n            if (page == 1 && (barterCount < halfLimit || auctionCount < halfLimit))\n                halfLimit += halfLimit - Math.min(barterCount, auctionCount)\n\n            if (page > Math.ceil((Math.min(barterCount, auctionCount) / limit) * 2))\n                halfLimit = limit;\n\n            let barters = await Barter.find(query)\n                .populate('relatedCategory relatedUser')\n                .sort({ creationDate: -1 })\n                .limit(halfLimit)\n                .skip((page - 1) * limit);\n\n            let auctions = await Auction.find(query)\n                .populate('relatedCategory relatedUser')\n                .sort({ creationDate: -1 })\n                .limit(halfLimit)\n                .skip((page - 1) * limit);\n\n            barters = await checkAllMyOfferAndFavouriteIn(barters, req, true);\n            auctions = await checkAllMyOfferAndFavouriteIn(auctions, req, false);\n\n            let response = new ApiResponse2(undefined, page, pageCount, limit, barters.length + auctions.length, req);\n\n            res.status(200).send({ barters, auctions, ...response });\n\n        } catch (err) {\n            next(err);\n        }\n    }\n}\n\n"]}