{"version":3,"sources":["../../../src/services/handlers/offer-messages.handler.js"],"names":["OfferMessageHandler","io","init","nsp","of","on","console","log","socket","room","data","offerId","join","create","message","findById","id","populate","to","emit","sendNotificationToOwner","relatedBarterOffer","barterOffer","relatedBarter","barter","fromUserId","targetUserId","relatedUser","user","fromUser","offerMessageNotification","title"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IACMA,mB;AAEF,iCAAYC,EAAZ,EAAgB;AAAA;;AACZ,aAAKA,EAAL,GAAUA,EAAV;AACA,aAAKC,IAAL;AACH;;;;+BAEM;AAAA;;AACH,gBAAIC,MAAM,KAAKF,EAAL,CAAQG,EAAR,CAAW,SAAX,CAAV;;AAEAD,gBAAIE,EAAJ,CAAO,YAAP,EAAqB,kBAAU;AAC3BC,wBAAQC,GAAR,CAAY,YAAZ;;AAEAC,uBAAOH,EAAP,CAAU,WAAV,EAAuB,gBAAQ;AAC3BC,4BAAQC,GAAR,CAAY,MAAZ;AACAC,2BAAOC,IAAP,GAAcC,KAAKC,OAAnB;AACAH,2BAAOI,IAAP,CAAYF,KAAKC,OAAjB;AACH,iBAJD;;AAMAH,uBAAOH,EAAP,CAAU,YAAV;AAAA,uFAAwB,iBAAMK,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACA,uBAAaG,MAAb,CAAoBH,IAApB,CADA;;AAAA;AAChBI,+CADgB;AAAA;AAAA,+CAEJ,uBAAaC,QAAb,CAAsBD,QAAQE,EAA9B,EAAkCC,QAAlC,CAA2C,aAA3C,CAFI;;AAAA;AAEpBH,+CAFoB;;AAGpBX,4CAAIe,EAAJ,CAAOV,OAAOC,IAAd,EAAoBU,IAApB,CAAyB,YAAzB,EAAuCL,OAAvC;;AAHoB;AAAA,+CAKd,MAAKM,uBAAL,CAA6BN,OAA7B,CALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAxB;;AAAA;AAAA;AAAA;AAAA;AAOH,aAhBD;AAiBH;;;;kGAG6BA,O;;;;;;;uCAEA,sBAAYC,QAAZ,CAAqBD,QAAQO,kBAA7B,C;;;AAApBC,2C;;uCACe,iBAAOP,QAAP,CAAgBO,YAAYC,aAA5B,C;;;AAAfC,sC;AAEFC,0C,GAAa,I;AACbC,4C,GAAe,I;;;AAEnB,oCAAGJ,YAAYK,WAAZ,IAA2Bb,QAAQa,WAAR,CAAoBX,EAAlD,EAAqD;AAAE;AAClDU,mDAAeF,OAAOG,WAAtB;AACAF,iDAAaH,YAAYK,WAAzB;AACJ,iCAHD,MAII;AAAE;AACDD,mDAAeJ,YAAYK,WAA3B;AACAF,iDAAaD,OAAOG,WAApB;AACJ;;;uCAGoC,mCAAyBd,MAAzB,CAAgC;AACjEe,0CAAMF,YAD2D;AAEjEG,8CAAUJ,UAFuD;AAGjEJ,wDAAoBC,YAAYN,EAHiC;AAIjEO,mDAAeC,OAAOR;AAJ2C,iCAAhC,C;;;AAAjCc,wD;AASA3B,mC,GAAM,KAAKF,EAAL,CAAQG,EAAR,CAAW,oBAAoBsB,YAApB,GAAmC,iBAA9C,C;;uCAEuB,mCAAyBX,QAAzB,CAAkCe,yBAAyBd,EAA3D,EAA+DC,QAA/D,CAAwE,wBAAxE,C;;;AAAjCa,wD;;AACA3B,oCAAIgB,IAAJ,CAAS,YAAT,EAAuBW,wBAAvB;;AAEA,qFAAuB,aAAvB,EAAyCN,OAAOO,KAAhD,wEAAwEL,YAAxE,eAAiGF,OAAOR,EAAxG,gBAAqHM,YAAYN,EAAjI;;;;;;;;;;;;;;;;;;;;;kBAKOhB,mB","file":"offer-messages.handler.js","sourcesContent":["import OfferMessage from \"../../models/offer-message.model\";\nimport Barter from \"../../models/barter.model\";\nimport BarterOffer from \"../../models/barter-offer.model\";\nimport OfferMessageNotification from \"../../models/offer-message-notification.model\";\nimport { sendNotificationToUser} from '../../helpers/PushNotificationsHelper';\nclass OfferMessageHandler {\n\n    constructor(io) {\n        this.io = io;\n        this.init();\n    }\n\n    init() {\n        let nsp = this.io.of(\"/offers\");\n\n        nsp.on(\"connection\", socket => {\n            console.log(\"Connection\");\n\n            socket.on(\"offerJoin\", data => {\n                console.log(\"join\")\n                socket.room = data.offerId;\n                socket.join(data.offerId);\n            });\n\n            socket.on(\"newMessage\", async data => {\n                let message = await OfferMessage.create(data);\n                message = await OfferMessage.findById(message.id).populate(\"relatedUser\");\n                nsp.to(socket.room).emit(\"newMessage\", message);\n\n                await this.sendNotificationToOwner(message);\n            });\n        })\n    }\n\n\n    async sendNotificationToOwner(message) {\n        \n        const barterOffer = await BarterOffer.findById(message.relatedBarterOffer);\n        const barter = await Barter.findById(barterOffer.relatedBarter);\n        \n        let fromUserId = null ;\n        let targetUserId = null ;\n        \n        if(barterOffer.relatedUser == message.relatedUser.id){ // Send To owner\n             targetUserId = barter.relatedUser ;\n             fromUserId = barterOffer.relatedUser ;\n        }\n        else{ // Send to offer guy\n             targetUserId = barterOffer.relatedUser ; \n             fromUserId = barter.relatedUser  ;\n        }\n\n\n        let offerMessageNotification = await OfferMessageNotification.create({ \n            user: targetUserId,\n            fromUser: fromUserId,\n            relatedBarterOffer: barterOffer.id,\n            relatedBarter: barter.id\n        });\n\n\n        \n        let nsp = this.io.of(\"/notifications/\" + targetUserId + \"/offer-messages\");\n\n        offerMessageNotification = await OfferMessageNotification.findById(offerMessageNotification.id).populate('fromUser relatedBarter');\n        nsp.emit(\"newMessage\", offerMessageNotification);\n\n        sendNotificationToUser('رسالة جديدة', `${barter.title} : تواصل بخصوص `, targetUserId, `barters/${barter.id}/offers/${barterOffer.id}`);\n    }\n}\n\n\nexport default OfferMessageHandler"]}