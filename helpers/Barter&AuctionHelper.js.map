{"version":3,"sources":["../../src/helpers/Barter&AuctionHelper.js"],"names":["items","req","isBarter","newItems","item","checkMyOfferAndFavouriteIn","push","checkAllMyOfferAndFavouriteIn","newItem","myOfferId","undefined","inMyFavourites","favUsers","some","favUser","equals","user","id","inMyOffers","offerUsers","offerUser","findOne","relatedBarter","relatedUser","barterOffer","toJSON"],"mappings":";;;;;;;;;;uEAEO,iBAA6CA,KAA7C,EAAoDC,GAApD;AAAA,YAAyDC,QAAzD,uEAAmE,IAAnE;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,gCADD,GACY,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA,oCAGcH,KAHd;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGMI,4BAHN;AAAA,sCAICD,QAJD;AAAA;AAAA,+BAIqBE,2BAA2BD,IAA3B,EAAiCH,GAAjC,EAAsCC,QAAtC,CAJrB;;AAAA;AAAA;;AAAA,oCAIUI,IAJV;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,yDAMIH,QANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,6B;;;;;;wEASf,kBAA0CH,IAA1C,EAAgDH,GAAhD;AAAA,YAAqDC,QAArD,uEAA+D,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AACCM,+BADD;AAECC,iCAFD,GAEaC,SAFb;AAICC,sCAJD,GAIkBP,KAAKQ,QAAL,CAAcC,IAAd,CAAmB,UAACC,OAAD,EAAa;AACjD,mCAAOA,QAAQC,MAAR,CAAed,IAAIe,IAAJ,CAASC,EAAxB,CAAP;AACH,yBAFoB,CAJlB;AAQCC,kCARD,GAQcd,KAAKe,UAAL,CAAgBN,IAAhB,CAAqB,UAACO,SAAD,EAAe;AACjD,mCAAOA,UAAUL,MAAV,CAAiBd,IAAIe,IAAJ,CAASC,EAA1B,CAAP;AACH,yBAFgB,CARd;;AAAA,8BAYCf,YAAYgB,UAZb;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAayB,sBAAYG,OAAZ,CAAoB,EAAEC,eAAelB,KAAKa,EAAtB,EAA2BM,aAAatB,IAAIe,IAAJ,CAASC,EAAjD,EAApB,CAbzB;;AAAA;AAaKO,mCAbL;;AAcCf,oCAAYe,YAAYP,EAAxB;;AAdD;;AAiBHT,+CAAeJ,KAAKqB,MAAL,EAAf,IAA8BP,sBAA9B,EAA0CP,8BAA1C,EAA0DF,oBAA1D;AAjBG,0DAkBID,OAlBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeH,0B;;;;;AAXtB","file":"Barter&AuctionHelper.js","sourcesContent":["import BarterOffer from '../models/barter-offer.model';\n        \nexport async function checkAllMyOfferAndFavouriteIn(items, req, isBarter= true) {\n    let newItems = [];\n\n    for (let item of items) \n        newItems.push(await checkMyOfferAndFavouriteIn(item, req, isBarter));\n\n    return newItems\n}\n\nexport async function checkMyOfferAndFavouriteIn(item, req, isBarter= true) {\n    let newItem;\n    let myOfferId = undefined;\n\n    let inMyFavourites = item.favUsers.some((favUser) => {\n        return favUser.equals(req.user.id);\n    });\n\n    let inMyOffers = item.offerUsers.some((offerUser) => {\n        return offerUser.equals(req.user.id);\n    });\n\n    if (isBarter && inMyOffers) {\n        let barterOffer = await BarterOffer.findOne({ relatedBarter: item.id , relatedUser: req.user.id })\n        myOfferId = barterOffer.id;\n    }\n    \n    newItem = { ...item.toJSON(), inMyOffers, inMyFavourites, myOfferId}\n    return newItem;\n}"]}